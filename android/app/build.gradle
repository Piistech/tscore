plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.tscore.radio"
    compileSdk 34
    ndkVersion "26.1.10909125"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.tscore.radio"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
        }
    }

    packagingOptions {
        exclude 'lib/armeabi-v7a/libagora_ai_noise_suppression_extension.so'
        exclude 'lib/armeabi-v7a/libagora_audio_beauty_extension.so'
        exclude 'lib/armeabi-v7a/libagora_clear_vision_extension.so'
        exclude 'lib/armeabi-v7a/libagora_content_inspect_extension.so'
        exclude 'lib/armeabi-v7a/libagora_screen_capture_extension.so'
        exclude 'lib/armeabi-v7a/AgoraScreenShareExtension.so'
        exclude 'lib/armeabi-v7a/libagora_segmentation_extension.so'
        exclude 'lib/armeabi-v7a/libagora_spatial_audio_extension.so'
        exclude 'lib/armeabi-v7a/libagora_pvc_extension.so'
        exclude 'lib/armeabi-v7a/libagora_super_resolution_extension.so'
        exclude 'lib/armeabi-v7a/libagora_drm_loader_extension.so'
        exclude 'lib/armeabi-v7a/libagora_udrm3_extension.so'
        exclude 'lib/armeabi-v7a/libagora_ai_echo_cancellation_extension.so'
        exclude 'lib/armeabi-v7a/libagora_face_detection_extension.so'
        exclude 'lib/armeabi-v7a/libagora_video_quality_analyzer_extension.so'
        exclude 'lib/armeabi-v7a/libagora_ai_noise_suppression_extension.so'

        exclude 'lib/arm64-v8a/libagora_ai_noise_suppression_extension.so'
        exclude 'lib/arm64-v8a/libagora_audio_beauty_extension.so'
        exclude 'lib/arm64-v8a/libagora_clear_vision_extension.so'
        exclude 'lib/arm64-v8a/libagora_content_inspect_extension.so'
        exclude 'lib/arm64-v8a/libagora_screen_capture_extension.so'
        exclude 'lib/arm64-v8a/AgoraScreenShareExtension.so'
        exclude 'lib/arm64-v8a/libagora_segmentation_extension.so'
        exclude 'lib/arm64-v8a/libagora_spatial_audio_extension.so'
        exclude 'lib/arm64-v8a/libagora_pvc_extension.so'
        exclude 'lib/arm64-v8a/libagora_super_resolution_extension.so'
        exclude 'lib/arm64-v8a/libagora_drm_loader_extension.so'
        exclude 'lib/arm64-v8a/libagora_udrm3_extension.so'
        exclude 'lib/arm64-v8a/libagora_ai_echo_cancellation_extension.so'
        exclude 'lib/arm64-v8a/libagora_face_detection_extension.so'
        exclude 'lib/arm64-v8a/libagora_video_quality_analyzer_extension.so'

        exclude 'lib/x86_64/libagora_ai_noise_suppression_extension.so'
        exclude 'lib/x86_64/libagora_audio_beauty_extension.so'
        exclude 'lib/x86_64/libagora_clear_vision_extension.so'
        exclude 'lib/x86_64/libagora_content_inspect_extension.so'
        exclude 'lib/x86_64/libagora_screen_capture_extension.so'
        exclude 'lib/x86_64/AgoraScreenShareExtension.so'
        exclude 'lib/x86_64/libagora_segmentation_extension.so'
        exclude 'lib/x86_64/libagora_spatial_audio_extension.so'
        exclude 'lib/x86_64/libagora_pvc_extension.so'
        exclude 'lib/x86_64/libagora_super_resolution_extension.so'
        exclude 'lib/x86_64/libagora_drm_loader_extension.so'
        exclude 'lib/x86_64/libagora_udrm3_extension.so'
        exclude 'lib/x86_64/libagora_ai_echo_cancellation_extension.so'
        exclude 'lib/x86_64/libagora_face_detection_extension.so'
        exclude 'lib/x86_64/libagora_video_quality_analyzer_extension.so'

        exclude 'lib/x86/libagora_ai_noise_suppression_extension.so'
        exclude 'lib/x86/libagora_audio_beauty_extension.so'
        exclude 'lib/x86/libagora_clear_vision_extension.so'
        exclude 'lib/x86/libagora_content_inspect_extension.so'
        exclude 'lib/x86/libagora_screen_capture_extension.so'
        exclude 'lib/x86/AgoraScreenShareExtension.so'
        exclude 'lib/x86/libagora_segmentation_extension.so'
        exclude 'lib/x86/libagora_spatial_audio_extension.so'
        exclude 'lib/x86/libagora_pvc_extension.so'
        exclude 'lib/x86/libagora_super_resolution_extension.so'
        exclude 'lib/x86/libagora_drm_loader_extension.so'
        exclude 'lib/x86/libagora_udrm3_extension.so'
        exclude 'lib/x86/libagora_ai_echo_cancellation_extension.so'
        exclude 'lib/x86/libagora_face_detection_extension.so'
        exclude 'lib/x86/libagora_video_quality_analyzer_extension.so'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    implementation "com.google.android.play:app-update:2.0.1"
    implementation "com.google.android.play:app-update-ktx:2.0.1"
    implementation 'com.google.android.gms:play-services-ads:23.1.0'
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    implementation("com.google.android.gms:play-services-ads:23.1.0")
}
